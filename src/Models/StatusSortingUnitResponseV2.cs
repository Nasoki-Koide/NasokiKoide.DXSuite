// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace NasokiKoide.DXSuite.Models {
    #pragma warning disable CS1591
    public class StatusSortingUnitResponseV2 : IAdditionalDataHolder, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>仕分け対象の全ページ数</summary>
        public int? PageCountAll { get; set; }
        /// <summary>仕分けステータスを表すコード値</summary>
        public int? StatusCode { get; set; }
        /// <summary>仕分け先別のOCR処理一覧</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public StatusSortingUnitResponseV2_statusList? StatusList { get; set; }
#nullable restore
#else
        public StatusSortingUnitResponseV2_statusList StatusList { get; set; }
#endif
        /// <summary>仕分けステータス名称</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusName { get; set; }
#nullable restore
#else
        public string StatusName { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="StatusSortingUnitResponseV2"/> and sets the default values.
        /// </summary>
        public StatusSortingUnitResponseV2()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="StatusSortingUnitResponseV2"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static StatusSortingUnitResponseV2 CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new StatusSortingUnitResponseV2();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"pageCountAll", n => { PageCountAll = n.GetIntValue(); } },
                {"statusCode", n => { StatusCode = n.GetIntValue(); } },
                {"statusList", n => { StatusList = n.GetObjectValue<StatusSortingUnitResponseV2_statusList>(StatusSortingUnitResponseV2_statusList.CreateFromDiscriminatorValue); } },
                {"statusName", n => { StatusName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("pageCountAll", PageCountAll);
            writer.WriteIntValue("statusCode", StatusCode);
            writer.WriteObjectValue<StatusSortingUnitResponseV2_statusList>("statusList", StatusList);
            writer.WriteStringValue("statusName", StatusName);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
